{"version":3,"sources":["../src/index.ts","../src/adapters/NextAdapter.ts","../src/adapters/NextMiddlewareAdapter.ts","../src/adapters/SvelteKitAdapter.ts","../src/utils/constants.ts","../src/utils/jwt.ts","../src/utils/cookies.ts","../src/utils/errors.ts"],"sourcesContent":["export type { CookieOptions, ApiError, User, UserFetcher, UserState } from './types';\nexport {\n  NextRequestAdapter,\n  NextResponseAdapter\n} from './adapters/NextAdapter';\nexport {\n  NextRequestAdapter as NextRequestMiddlewareAdapter,\n  NextResponseAdapter as NextResponseMiddlewareAdapter\n} from './adapters/NextMiddlewareAdapter';\nexport {\n  SvelteKitRequestAdapter,\n  SvelteKitResponseAdapter\n} from './adapters/SvelteKitAdapter';\nexport * from './utils';\n","import type { IncomingMessage, ServerResponse } from 'http';\nimport type { NextApiRequest, NextApiResponse } from 'next';\nimport type { NextApiRequestCookies } from 'next/dist/server/api-utils';\nimport type { RequestAdapter, ResponseAdapter } from './types';\n\ntype NextRequest =\n  | NextApiRequest\n  | (IncomingMessage & {\n      cookies: NextApiRequestCookies;\n    });\n\nexport class NextRequestAdapter implements RequestAdapter {\n  private req: NextRequest;\n  constructor(request: NextRequest) {\n    this.req = request;\n  }\n\n  setRequestCookie(name: string, value: string) {\n    this.req.cookies[name] = value;\n  }\n\n  getHeader(name: string) {\n    return this.req.headers[name];\n  }\n}\n\nexport class NextResponseAdapter implements ResponseAdapter {\n  private res: NextApiResponse | ServerResponse;\n  constructor(response: NextApiResponse | ServerResponse) {\n    this.res = response;\n  }\n\n  getHeader(name: string) {\n    return this.res.getHeader(name);\n  }\n\n  setHeader(name: string, value: string) {\n    this.res.setHeader(name, value);\n    return this;\n  }\n}\n","import type { NextRequest, NextResponse } from 'next/server';\nimport type { RequestAdapter, ResponseAdapter } from './types';\n\nexport class NextRequestAdapter implements RequestAdapter {\n  private req: NextRequest;\n  constructor(request: NextRequest) {\n    this.req = request;\n  }\n\n  setRequestCookie(name: string, value: string) {\n    this.req.cookies.set(name, value);\n  }\n\n  getHeader(name: string) {\n    return this.req.headers.get(name);\n  }\n}\n\nexport class NextResponseAdapter implements ResponseAdapter {\n  private res: NextResponse;\n  constructor(response: NextResponse) {\n    this.res = response;\n  }\n\n  getHeader(name: string) {\n    return this.res.headers.get(name);\n  }\n\n  setHeader(name: string, value: string) {\n    this.res.headers.set(name, value);\n    return this;\n  }\n}\n","import type { RequestAdapter, ResponseAdapter } from './types';\n\nexport class SvelteKitRequestAdapter implements RequestAdapter {\n  private req: Request;\n  constructor(request: Request) {\n    this.req = request;\n  }\n\n  setRequestCookie(name: string, value: string) {\n    this.req.headers.set('cookie', `${name}=${value}`);\n  }\n\n  getHeader(name: string) {\n    return this.req.headers.get(name);\n  }\n}\n\nexport class SvelteKitResponseAdapter implements ResponseAdapter {\n  private res: Response;\n  constructor(response: Response) {\n    this.res = response;\n  }\n\n  getHeader(name: string) {\n    return this.res.headers.get(name);\n  }\n\n  setHeader(name: string, value: string | string[]) {\n    if (Array.isArray(value)) {\n      value.forEach((val: string) => {\n        this.res.headers.append(name, val);\n      });\n    } else {\n      this.res.headers.set(name, value);\n    }\n    return this.res;\n  }\n}\n","export const COOKIE_OPTIONS = {\n  name: 'sb',\n  lifetime: 7 * 24 * 60 * 60, // 7 days\n  domain: '',\n  path: '/',\n  sameSite: 'lax'\n};\n\nexport const TOKEN_REFRESH_MARGIN = 10; // in seconds\nexport const RETRY_INTERVAL = 2; // in hundred ms (initial retry after 200ms with exponential backoff)\nexport const MAX_RETRIES = 10;\nexport const ENDPOINT_PREFIX = '/api/auth';\n","import { decodeJwt } from 'jose';\n\nexport const jwtDecoder = (jwt: string) => decodeJwt(jwt);\n","import type { RequestAdapter, ResponseAdapter } from '../adapters/types';\n\ntype Cookie = {\n  name: string;\n  value: string;\n  maxAge: number;\n  domain?: string;\n  path?: string;\n  sameSite?: string;\n};\n\ninterface Objs {\n  [key: string]: string | null;\n}\n\nexport const parseCookie = (str: string | null) => {\n  if (!str) return {};\n\n  const decode = decodeURIComponent;\n\n  return str\n    .split(';')\n    .map((v) => v.split('='))\n    .reduce((acc: Objs, v) => {\n      const [key, val] = v;\n      acc[decode(key.trim())] = decode(val.trim());\n      return acc;\n    }, {});\n};\n\n/**\n * Serialize data into a cookie header.\n */\nfunction serialize(\n  name: string,\n  val: string,\n  options: {\n    maxAge: number;\n    domain: string;\n    path: string;\n    expires: Date;\n    httpOnly: boolean;\n    secure: boolean;\n    sameSite: string;\n  }\n) {\n  const opt = options || {};\n  const enc = encodeURIComponent;\n  /* eslint-disable-next-line no-control-regex */\n  const fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\n\n  if (typeof enc !== 'function') {\n    throw new TypeError('option encode is invalid');\n  }\n\n  if (!fieldContentRegExp.test(name)) {\n    throw new TypeError('argument name is invalid');\n  }\n\n  const value = enc(val);\n\n  if (value && !fieldContentRegExp.test(value)) {\n    throw new TypeError('argument val is invalid');\n  }\n\n  let str = name + '=' + value;\n\n  if (null != opt.maxAge) {\n    const maxAge = opt.maxAge - 0;\n\n    if (isNaN(maxAge) || !isFinite(maxAge)) {\n      throw new TypeError('option maxAge is invalid');\n    }\n\n    str += '; Max-Age=' + Math.floor(maxAge);\n  }\n\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n\n    str += '; Domain=' + opt.domain;\n  }\n\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n\n    str += '; Path=' + opt.path;\n  }\n\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n\n    str += '; Expires=' + opt.expires.toUTCString();\n  }\n\n  if (opt.httpOnly) {\n    str += '; HttpOnly';\n  }\n\n  if (opt.secure) {\n    str += '; Secure';\n  }\n\n  if (opt.sameSite) {\n    const sameSite =\n      typeof opt.sameSite === 'string'\n        ? opt.sameSite.toLowerCase()\n        : opt.sameSite;\n\n    switch (sameSite) {\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n\n  return str;\n}\n\n/**\n * Based on the environment and the request we know if a secure cookie can be set.\n */\nfunction isSecureEnvironment(req: RequestAdapter) {\n  if (!req || !req.getHeader('host')) {\n    throw new Error('The \"host\" request header is not available');\n  }\n\n  const headerHost = req.getHeader('host') as string;\n  const host =\n    (headerHost.indexOf(':') > -1 && headerHost.split(':')[0]) || headerHost;\n  if (\n    ['localhost', '127.0.0.1'].indexOf(host) > -1 ||\n    host.endsWith('.local')\n  ) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Serialize a cookie to a string.\n */\nfunction serializeCookie(cookie: Cookie, secure: boolean) {\n  return serialize(cookie.name, cookie.value, {\n    maxAge: cookie.maxAge,\n    expires: new Date(Date.now() + cookie.maxAge * 1000),\n    httpOnly: true,\n    secure,\n    path: cookie.path ?? '/',\n    domain: cookie.domain ?? '',\n    sameSite: cookie.sameSite ?? 'lax'\n  });\n}\n\n/**\n * Get Cookie Header strings.\n */\nexport function getCookieString(\n  req: RequestAdapter,\n  res: ResponseAdapter,\n  cookies: Array<Cookie>\n): string[] {\n  const strCookies = cookies.map((c) =>\n    serializeCookie(c, isSecureEnvironment(req))\n  );\n  const previousCookies = res.getHeader('Set-Cookie');\n  if (previousCookies) {\n    if (previousCookies instanceof Array) {\n      Array.prototype.push.apply(strCookies, previousCookies);\n    } else if (typeof previousCookies === 'string') {\n      strCookies.push(previousCookies);\n    }\n  }\n  return strCookies;\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookies(\n  req: RequestAdapter,\n  res: ResponseAdapter,\n  cookies: Array<Cookie>\n) {\n  for (let cookie of cookies) {\n    req.setRequestCookie(cookie.name, cookie.value);\n  }\n  res.setHeader('Set-Cookie', getCookieString(req, res, cookies));\n}\n\n/**\n * Set one or more cookies.\n */\nexport function setCookie(\n  req: RequestAdapter,\n  res: ResponseAdapter,\n  cookie: Cookie\n) {\n  setCookies(req, res, [cookie]);\n}\n\nexport function deleteCookie(\n  req: RequestAdapter,\n  res: ResponseAdapter,\n  name: string\n) {\n  setCookie(req, res, {\n    name,\n    value: '',\n    maxAge: -1\n  });\n}\n","export interface ErrorPayload {\n  type?: string;\n  message: string;\n  source?: string;\n}\n\nexport class AuthHelperError extends Error {\n  errorType: string;\n  source: string;\n\n  constructor(message: string, errorType: string) {\n    super(message);\n    this.errorType = errorType;\n    this.source = 'sb_auth_helpers';\n  }\n\n  toObj(): ErrorPayload {\n    return {\n      type: this.errorType,\n      message: this.message,\n      source: this.source\n    };\n  }\n\n  toString() {\n    return JSON.stringify(this.toObj());\n  }\n}\n\nexport class CookieNotFound extends AuthHelperError {\n  constructor() {\n    super('No cookie was found!', 'cookie_not_found');\n  }\n}\n\nexport class CookieNotSaved extends AuthHelperError {\n  constructor() {\n    super('Cookies cannot be saved!', 'cookie_not_saved');\n  }\n}\n\nexport class AccessTokenNotFound extends AuthHelperError {\n  constructor() {\n    super('No access token was found!', 'cookie_not_found');\n  }\n}\n\nexport class RefreshTokenNotFound extends AuthHelperError {\n  constructor() {\n    super('No refresh token was found!', 'cookie_not_found');\n  }\n}\n\nexport class ProviderTokenNotFound extends AuthHelperError {\n  constructor() {\n    super('No provider token was found!', 'cookie_not_found');\n  }\n}\n\nexport class CookieNotParsed extends AuthHelperError {\n  constructor() {\n    super('Not able to parse cookies!', 'cookie_not_parsed');\n  }\n}\n\nexport class CallbackUrlFailed extends AuthHelperError {\n  constructor(callbackUrl: string) {\n    super(`The request to ${callbackUrl} failed!`, 'callback_url_failed');\n  }\n}\n\nexport class JWTPayloadFailed extends AuthHelperError {\n  constructor() {\n    super('Not able to parse JWT payload!', 'jwt_payload_failed');\n  }\n}\n"],"mappings":"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","names":[]}